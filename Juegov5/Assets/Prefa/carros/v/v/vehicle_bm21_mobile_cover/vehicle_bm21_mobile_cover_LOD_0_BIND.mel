/*====================================
* Binds Joints to Mesh 
* Generated By: Lime - COD In Game exporter
* Copyright: Tom Crowley 2011-2013(c)
* Site: tom-crowley.co.uk
* Version: FastBind(1.1)
* How To Use: Drag & drop on to maya when model has been loaded
====================================*/

global proc cout(string $s){
	print($s + "\n");
}

global proc string MeshName(string $Mesh){
	return findRelatedSkinCluster($Mesh);
}


global proc TomMesh_0_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshCD8e1C_0'");
	select -r TomMeshCD8e1C_0;
	select -add left_door;
	select -add right_door;
	select -add body_animate_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

	string $clu = MeshName("TomMeshCD8e1C_0");
	skinPercent -tv left_door 1 $clu TomMeshCD8e1C_0.vtx[0:4];
	skinPercent -tv right_door 1 $clu TomMeshCD8e1C_0.vtx[4:8];
	skinPercent -tv body_animate_jnt 1 $clu TomMeshCD8e1C_0.vtx[8:32];

}

global proc TomMesh_1_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshCD8e1C_1'");
	select -r TomMeshCD8e1C_1;
	select -add right_wheel_01_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_2_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshCD8e1C_2'");
	select -r TomMeshCD8e1C_2;
	select -add right_wheel_03_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_3_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshCD8e1C_3'");
	select -r TomMeshCD8e1C_3;
	select -add left_wheel_01_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_4_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshCD8e1C_4'");
	select -r TomMeshCD8e1C_4;
	select -add right_wheel_02_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_5_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshCD8e1C_5'");
	select -r TomMeshCD8e1C_5;
	select -add left_wheel_03_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_6_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshCD8e1C_6'");
	select -r TomMeshCD8e1C_6;
	select -add left_wheel_02_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_7_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshCD8e1C_7'");
	select -r TomMeshCD8e1C_7;
	select -add body_animate_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_8_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshCD8e1C_8'");
	select -r TomMeshCD8e1C_8;
	select -add left_door;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_9_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshCD8e1C_9'");
	select -r TomMeshCD8e1C_9;
	select -add right_door;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_10_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshCD8e1C_10'");
	select -r TomMeshCD8e1C_10;
	select -add body_animate_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_11_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshCD8e1C_11'");
	select -r TomMeshCD8e1C_11;
	select -add body_animate_jnt;
	select -add back_board;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

	string $clu = MeshName("TomMeshCD8e1C_11");
	skinPercent -tv body_animate_jnt 1 $clu TomMeshCD8e1C_11.vtx[0:32];
	skinPercent -tv back_board 1 $clu TomMeshCD8e1C_11.vtx[32:176];

}

global proc TomMesh_12_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshCD8e1C_12'");
	select -r TomMeshCD8e1C_12;
	select -add body_animate_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc RunSimpleBinds()
{
	// Max of single tag per a vert for whole mesh.

	catch(TomMesh_0_SimpleBinder());
	catch(TomMesh_1_SimpleBinder());
	catch(TomMesh_2_SimpleBinder());
	catch(TomMesh_3_SimpleBinder());
	catch(TomMesh_4_SimpleBinder());
	catch(TomMesh_5_SimpleBinder());
	catch(TomMesh_6_SimpleBinder());
	catch(TomMesh_7_SimpleBinder());
	catch(TomMesh_8_SimpleBinder());
	catch(TomMesh_9_SimpleBinder());
	catch(TomMesh_10_SimpleBinder());
	catch(TomMesh_11_SimpleBinder());
	catch(TomMesh_12_SimpleBinder());
}

RunSimpleBinds();
cout("Finished Binding Joints..");