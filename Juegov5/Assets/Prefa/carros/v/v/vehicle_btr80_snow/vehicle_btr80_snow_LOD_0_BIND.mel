/*====================================
* Binds Joints to Mesh 
* Generated By: Lime - COD In Game exporter
* Copyright: Tom Crowley 2011-2013(c)
* Site: tom-crowley.co.uk
* Version: FastBind(1.1)
* How To Use: Drag & drop on to maya when model has been loaded
====================================*/

global proc cout(string $s){
	print($s + "\n");
}

global proc string MeshName(string $Mesh){
	return findRelatedSkinCluster($Mesh);
}


global proc TomMesh_0_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshFF4AHR_0'");
	select -r TomMeshFF4AHR_0;
	select -add left_wheel_03_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_1_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshFF4AHR_1'");
	select -r TomMeshFF4AHR_1;
	select -add right_wheel_03_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_2_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshFF4AHR_2'");
	select -r TomMeshFF4AHR_2;
	select -add left_wheel_06_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_3_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshFF4AHR_3'");
	select -r TomMeshFF4AHR_3;
	select -add left_wheel_04_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_4_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshFF4AHR_4'");
	select -r TomMeshFF4AHR_4;
	select -add left_wheel_05_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_5_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshFF4AHR_5'");
	select -r TomMeshFF4AHR_5;
	select -add right_wheel_06_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_6_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshFF4AHR_6'");
	select -r TomMeshFF4AHR_6;
	select -add right_wheel_04_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_7_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshFF4AHR_7'");
	select -r TomMeshFF4AHR_7;
	select -add right_wheel_05_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_8_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshFF4AHR_8'");
	select -r TomMeshFF4AHR_8;
	select -add body_animate_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_9_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshFF4AHR_9'");
	select -r TomMeshFF4AHR_9;
	select -add turret_animate_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_10_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshFF4AHR_10'");
	select -r TomMeshFF4AHR_10;
	select -add barrel_animate_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_11_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshFF4AHR_11'");
	select -r TomMeshFF4AHR_11;
	select -add side_door_bottom_left;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_12_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshFF4AHR_12'");
	select -r TomMeshFF4AHR_12;
	select -add side_door_bottom_right;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_13_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshFF4AHR_13'");
	select -r TomMeshFF4AHR_13;
	select -add side_door_top_right;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_14_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshFF4AHR_14'");
	select -r TomMeshFF4AHR_14;
	select -add side_door_top_left;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_15_ComplexBinder()
{
	cout("Running Complex Bind For 'TomMeshFF4AHR_15'");
	select -r TomMeshFF4AHR_15;
	select -add antanna_r_jnt;
	select -add body_animate_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";


	string $clu = MeshName("TomMeshFF4AHR_15");

	skinPercent -tv antanna_r_jnt 1.0 $clu TomMeshFF4AHR_15.vtx[0:7] TomMeshFF4AHR_15.vtx[13:13] TomMeshFF4AHR_15.vtx[21:21];
	skinPercent -tv body_animate_jnt 1.0 $clu TomMeshFF4AHR_15.vtx[8:12] TomMeshFF4AHR_15.vtx[14:20] TomMeshFF4AHR_15.vtx[22:23];

	// Applying sub weights
	skinPercent -tv antanna_r_jnt 0.50001 $clu TomMeshFF4AHR_15.vtx[8:12];
	skinPercent -tv body_animate_jnt 0.39454 $clu TomMeshFF4AHR_15.vtx[13];
	skinPercent -tv antanna_r_jnt 0.50001 $clu TomMeshFF4AHR_15.vtx[14:20];
	skinPercent -tv body_animate_jnt 0.39454 $clu TomMeshFF4AHR_15.vtx[21];
	skinPercent -tv antanna_r_jnt 0.50001 $clu TomMeshFF4AHR_15.vtx[22:23];

}

global proc RunSimpleBinds()
{
	// Max of single tag per a vert for whole mesh.

	catch(TomMesh_0_SimpleBinder());
	catch(TomMesh_1_SimpleBinder());
	catch(TomMesh_2_SimpleBinder());
	catch(TomMesh_3_SimpleBinder());
	catch(TomMesh_4_SimpleBinder());
	catch(TomMesh_5_SimpleBinder());
	catch(TomMesh_6_SimpleBinder());
	catch(TomMesh_7_SimpleBinder());
	catch(TomMesh_8_SimpleBinder());
	catch(TomMesh_9_SimpleBinder());
	catch(TomMesh_10_SimpleBinder());
	catch(TomMesh_11_SimpleBinder());
	catch(TomMesh_12_SimpleBinder());
	catch(TomMesh_13_SimpleBinder());
	catch(TomMesh_14_SimpleBinder());
}

global proc RunComplexBinds()
{
	// Max of 4 tags binded to a single vert. 

	catch(TomMesh_15_ComplexBinder());
}

RunSimpleBinds();
RunComplexBinds();
cout("Finished Binding Joints..");