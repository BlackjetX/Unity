/*====================================
* Binds Joints to Mesh 
* Generated By: Lime - COD In Game exporter
* Copyright: Tom Crowley 2011-2013(c)
* Site: tom-crowley.co.uk
* Version: FastBind(1.1)
* How To Use: Drag & drop on to maya when model has been loaded
====================================*/

global proc cout(string $s){
	print($s + "\n");
}

global proc string MeshName(string $Mesh){
	return findRelatedSkinCluster($Mesh);
}


global proc TomMesh_0_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshpMrXRP_0'");
	select -r TomMeshpMrXRP_0;
	select -add top_rotor_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_1_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshpMrXRP_1'");
	select -r TomMeshpMrXRP_1;
	select -add main_rotor_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_2_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshpMrXRP_2'");
	select -r TomMeshpMrXRP_2;
	select -add body_animate_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_3_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshpMrXRP_3'");
	select -r TomMeshpMrXRP_3;
	select -add main_rotor_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_4_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshpMrXRP_4'");
	select -r TomMeshpMrXRP_4;
	select -add top_rotor_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_5_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshpMrXRP_5'");
	select -r TomMeshpMrXRP_5;
	select -add body_animate_jnt;
	select -add rudder_l_jnt;
	select -add rudder_r_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

	string $clu = MeshName("TomMeshpMrXRP_5");
	skinPercent -tv body_animate_jnt 1 $clu TomMeshpMrXRP_5.vtx[0:19];
	skinPercent -tv rudder_l_jnt 1 $clu TomMeshpMrXRP_5.vtx[19:69];
	skinPercent -tv rudder_r_jnt 1 $clu TomMeshpMrXRP_5.vtx[69:118];

}

global proc TomMesh_6_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshpMrXRP_6'");
	select -r TomMeshpMrXRP_6;
	select -add cameraball_animate_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_7_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshpMrXRP_7'");
	select -r TomMeshpMrXRP_7;
	select -add cameraballbase_animate_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_8_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshpMrXRP_8'");
	select -r TomMeshpMrXRP_8;
	select -add top_rotor_jnt;
	select -add main_rotor_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

	string $clu = MeshName("TomMeshpMrXRP_8");
	skinPercent -tv top_rotor_jnt 1 $clu TomMeshpMrXRP_8.vtx[0:105];
	skinPercent -tv main_rotor_jnt 1 $clu TomMeshpMrXRP_8.vtx[105:210];

}

global proc TomMesh_9_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshpMrXRP_9'");
	select -r TomMeshpMrXRP_9;
	select -add cameraball_animate_jnt;
	select -add body_animate_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

	string $clu = MeshName("TomMeshpMrXRP_9");
	skinPercent -tv cameraball_animate_jnt 1 $clu TomMeshpMrXRP_9.vtx[0:58];
	skinPercent -tv body_animate_jnt 1 $clu TomMeshpMrXRP_9.vtx[58:79];

}

global proc TomMesh_10_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshpMrXRP_10'");
	select -r TomMeshpMrXRP_10;
	select -add main_rotor_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_11_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMeshpMrXRP_11'");
	select -r TomMeshpMrXRP_11;
	select -add top_rotor_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc RunSimpleBinds()
{
	// Max of single tag per a vert for whole mesh.

	catch(TomMesh_0_SimpleBinder());
	catch(TomMesh_1_SimpleBinder());
	catch(TomMesh_2_SimpleBinder());
	catch(TomMesh_3_SimpleBinder());
	catch(TomMesh_4_SimpleBinder());
	catch(TomMesh_5_SimpleBinder());
	catch(TomMesh_6_SimpleBinder());
	catch(TomMesh_7_SimpleBinder());
	catch(TomMesh_8_SimpleBinder());
	catch(TomMesh_9_SimpleBinder());
	catch(TomMesh_10_SimpleBinder());
	catch(TomMesh_11_SimpleBinder());
}

RunSimpleBinds();
cout("Finished Binding Joints..");