/*====================================
* Binds Joints to Mesh 
* Generated By: Lime - COD In Game exporter
* Copyright: Tom Crowley 2011-2013(c)
* Site: tom-crowley.co.uk
* Version: FastBind(1.1)
* How To Use: Drag & drop on to maya when model has been loaded
====================================*/

global proc cout(string $s){
	print($s + "\n");
}

global proc string MeshName(string $Mesh){
	return findRelatedSkinCluster($Mesh);
}


global proc TomMesh_0_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMesh8cVpP1_0'");
	select -r TomMesh8cVpP1_0;
	select -add body_animate_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc TomMesh_1_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMesh8cVpP1_1'");
	select -r TomMesh8cVpP1_1;
	select -add r_frapc0_jnt;
	select -add l_flapc0_jnt;
	select -add r_frape0_jnt;
	select -add l_flape0_jnt;
	select -add r_frapd0_jnt;
	select -add l_flapd0_jnt;
	select -add l_flapa0_jnt;
	select -add r_frapa0_jnt;
	select -add r_frapb0_jnt;
	select -add l_flapb0_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

	string $clu = MeshName("TomMesh8cVpP1_1");
	skinPercent -tv r_frapc0_jnt 1 $clu TomMesh8cVpP1_1.vtx[0:34];
	skinPercent -tv l_flapc0_jnt 1 $clu TomMesh8cVpP1_1.vtx[34:68];
	skinPercent -tv r_frape0_jnt 1 $clu TomMesh8cVpP1_1.vtx[68:99];
	skinPercent -tv l_flape0_jnt 1 $clu TomMesh8cVpP1_1.vtx[99:130];
	skinPercent -tv r_frapd0_jnt 1 $clu TomMesh8cVpP1_1.vtx[130:172];
	skinPercent -tv l_flapd0_jnt 1 $clu TomMesh8cVpP1_1.vtx[172:214];
	skinPercent -tv l_flapa0_jnt 1 $clu TomMesh8cVpP1_1.vtx[214:246];
	skinPercent -tv r_frapa0_jnt 1 $clu TomMesh8cVpP1_1.vtx[246:278];
	skinPercent -tv r_frapb0_jnt 1 $clu TomMesh8cVpP1_1.vtx[278:310];
	skinPercent -tv l_flapb0_jnt 1 $clu TomMesh8cVpP1_1.vtx[310:342];

}

global proc TomMesh_2_SimpleBinder()
{
	cout("Running Simple Bind For 'TomMesh8cVpP1_2'");
	select -r TomMesh8cVpP1_2;
	select -add body_animate_jnt;
	newSkinCluster "-toSelectedBones -mi 30 -omi true -dr 5.0 -rui false";

}

global proc RunSimpleBinds()
{
	// Max of single tag per a vert for whole mesh.

	catch(TomMesh_0_SimpleBinder());
	catch(TomMesh_1_SimpleBinder());
	catch(TomMesh_2_SimpleBinder());
}

RunSimpleBinds();
cout("Finished Binding Joints..");